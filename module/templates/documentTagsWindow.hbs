<form class="item-tags">
    <div class="tag-container">
        {{#if documentTags}}
            {{#each documentTags}}
            <div class="tag" draggable="true" ondragover="allowDrop(event)" ondragstart="drag(event)" ondrop="drop(event)" ondragenter="dragEnter(event)" ondragleave="dragLeave(event)">
                <span class="text">{{this}}</span>
                <a class="icon">
                    <i class="fas fa-times" data-index="{{@index}}"></i>
                </a>
            </div>
            {{/each}}
        {{/if}}
        <input class="tag-input" autofocus placeholder="{{localize "itemTags.tag.placeholder"}}"/>
    </div>
    <span class="confirmation">
        <button type="button" class="cancel">
            <i class="fas fa-times"></i>{{localize "itemTags.confirmation.cancel"}}
        </button>
        <button type="button" class="save">
            <i class="fas fa-check"></i>{{localize "itemTags.confirmation.save"}}
        </button>
    </span>
</form>

<script>
    {
        let draggedElement = undefined;

        function dragEnter(event) {
            event.preventDefault();

            let target = event.target.closest('.tag');
            if (target && draggedElement !== target) {
                target.classList.add('on-drag');
            }
        }

        function dragLeave(event) {
            event.preventDefault();

            let target = event.target.closest('.tag');
            if (target && draggedElement !== target && !target.contains(event.relatedTarget)) {
                target.classList.remove('on-drag');
            }
        }

        function allowDrop(event) {
            event.preventDefault();
        }

        function drag(event) {
            draggedElement = event.target;
        }

        function drop(event) {
            event.preventDefault();

            const target = event.target.closest('.tag');

            if (target && draggedElement !== target) {
                const allTags = document.querySelectorAll('.tag-container .tag');
                const draggedIndex = Array.from(allTags).indexOf(draggedElement);
                const droppedIndex = Array.from(allTags).indexOf(target);

                if (draggedIndex < droppedIndex) {
                    target.parentNode.insertBefore(draggedElement, target.nextSibling);
                } else {
                    target.parentNode.insertBefore(draggedElement, target);
                }

                target.classList.remove('on-drag');
            }
        }
    }
</script>
